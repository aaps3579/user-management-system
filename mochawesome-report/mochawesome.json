{
  "stats": {
    "suites": 8,
    "tests": 18,
    "passes": 18,
    "pending": 0,
    "failures": 0,
    "start": "2021-10-24T08:11:18.738Z",
    "end": "2021-10-24T08:11:19.492Z",
    "duration": 754,
    "testsRegistered": 18,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "31628d20-3e34-4031-b7f9-2053339a8881",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ec7f2553-f564-4eea-99ab-0b147b23da86",
          "title": "Users",
          "fullFile": "/Users/aman/Desktop/user-management-system/test/user.put.js",
          "file": "/test/user.put.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Users\"",
              "fullTitle": "Users \"before each\" hook in \"Users\"",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Before each test we clear the database\nUser.destroy({ truncate: true, where: {} }).then(() => {\n  chai\n    .request(app)\n    .post(\"/token\")\n    .end((err, res) => {\n      jsonwebtoken = res.text;\n      done();\n    });\n});",
              "err": {},
              "uuid": "c97701ba-cf17-4e36-b3aa-eb7b87995532",
              "parentUUID": "ec7f2553-f564-4eea-99ab-0b147b23da86",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "74171775-19fd-4d2b-8c41-e481614ae9ef",
              "title": "/PUT user",
              "fullFile": "/Users/aman/Desktop/user-management-system/test/user.put.js",
              "file": "/test/user.put.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should return a 403 status without authentication",
                  "fullTitle": "Users /PUT user it should return a 403 status without authentication",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(app)\n  .put(\"/api/users\")\n  .end((err, res) => {\n    res.should.have.status(403);\n    done();\n  });",
                  "err": {},
                  "uuid": "bf4781a6-0172-4048-8b2d-59061eb51f88",
                  "parentUUID": "74171775-19fd-4d2b-8c41-e481614ae9ef",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should update name of the user",
                  "fullTitle": "Users /PUT user it should update name of the user",
                  "timedOut": false,
                  "duration": 160,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const data = {\n  fullname: \"Amanpreet\",\n  email: \"amanpreet.3579@gmail.com\",\n  password: 123456,\n};\nUser.create(data).then((user) => {\n  chai\n    .request(app)\n    .put(`/api/users/${user.id}`)\n    .auth(jsonwebtoken, { type: \"bearer\" })\n    .send({ fullname: \"Amanpreet Singh\" })\n    .end((err, res) => {\n      res.should.have.status(200);\n      res.body.should.be.a(\"object\");\n      res.body.should.have.property(\"fullname\").eql(\"Amanpreet Singh\");\n      done();\n    });\n});",
                  "err": {},
                  "uuid": "9d611479-4256-4e16-98bb-951123219cf7",
                  "parentUUID": "74171775-19fd-4d2b-8c41-e481614ae9ef",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should not update email of the user if email is already taken",
                  "fullTitle": "Users /PUT user it should not update email of the user if email is already taken",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user_data = {\n  fullname: \"Amanpreet\",\n  email: \"amanpreet.3579@gmail.com\",\n  password: 123456,\n};\nconst user_data_2 = {\n  fullname: \"John\",\n  email: \"john@gmail.com\",\n  password: 123456,\n};\nUser.bulkCreate([user_data, user_data_2]).then((users) => {\n  chai\n    .request(app)\n    .put(`/api/users/${users[0].id}`)\n    .auth(jsonwebtoken, { type: \"bearer\" })\n    .send({ email: \"john@gmail.com\" })\n    .end((err, res) => {\n      res.should.have.status(400);\n      done();\n    });\n});",
                  "err": {},
                  "uuid": "51cfc5fd-3ca9-416f-9fd7-acce395967c3",
                  "parentUUID": "74171775-19fd-4d2b-8c41-e481614ae9ef",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should return 404 status if user is not found",
                  "fullTitle": "Users /PUT user it should return 404 status if user is not found",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(app)\n  .put(`/api/users/101`)\n  .auth(jsonwebtoken, { type: \"bearer\" })\n  .send({ email: \"john@gmail.com\" })\n  .end((err, res) => {\n    res.should.have.status(404);\n    done();\n  });",
                  "err": {},
                  "uuid": "08c2edd1-cd2d-4914-9d14-834d210ac4e2",
                  "parentUUID": "74171775-19fd-4d2b-8c41-e481614ae9ef",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bf4781a6-0172-4048-8b2d-59061eb51f88",
                "9d611479-4256-4e16-98bb-951123219cf7",
                "51cfc5fd-3ca9-416f-9fd7-acce395967c3",
                "08c2edd1-cd2d-4914-9d14-834d210ac4e2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 176,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3bf60d42-6944-4754-82eb-5d4143034279",
          "title": "Users",
          "fullFile": "/Users/aman/Desktop/user-management-system/test/users.delete.js",
          "file": "/test/users.delete.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Users\"",
              "fullTitle": "Users \"before each\" hook in \"Users\"",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Before each test we clear the database\nUser.destroy({ truncate: true, where: {} }).then(() => {\n  chai\n    .request(app)\n    .post(\"/token\")\n    .end((err, res) => {\n      jsonwebtoken = res.text;\n      done();\n    });\n});",
              "err": {},
              "uuid": "bc4bbc34-88df-481a-87cc-eab969f8f320",
              "parentUUID": "3bf60d42-6944-4754-82eb-5d4143034279",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "7d16fce7-ada5-4f2e-a29e-04dcd32ad2f1",
              "title": "/DELETE user",
              "fullFile": "/Users/aman/Desktop/user-management-system/test/users.delete.js",
              "file": "/test/users.delete.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should return a 403 status without authentication",
                  "fullTitle": "Users /DELETE user it should return a 403 status without authentication",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(app)\n  .delete(\"/api/users\")\n  .end((err, res) => {\n    res.should.have.status(403);\n    done();\n  });",
                  "err": {},
                  "uuid": "cbf393a6-b982-4829-ba25-d70a6f1097a5",
                  "parentUUID": "7d16fce7-ada5-4f2e-a29e-04dcd32ad2f1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should delete a user",
                  "fullTitle": "Users /DELETE user it should delete a user",
                  "timedOut": false,
                  "duration": 76,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "User.create({\n  fullname: \"Amanpreet Singh\",\n  email: \"amanpreet.3579@gmail.com\",\n  password: 123456,\n}).then((user) => {\n  chai\n    .request(app)\n    .delete(`/api/users/${user.id}`)\n    .auth(jsonwebtoken, { type: \"bearer\" })\n    .end((err, res) => {\n      res.should.have.status(200);\n      done();\n    });\n});",
                  "err": {},
                  "uuid": "1bb917ec-a173-4470-9425-c2f35ccd5639",
                  "parentUUID": "7d16fce7-ada5-4f2e-a29e-04dcd32ad2f1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should not delete a user [ 404 error ]",
                  "fullTitle": "Users /DELETE user it should not delete a user [ 404 error ]",
                  "timedOut": false,
                  "duration": 71,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "User.create({\n  fullname: \"Amanpreet Singh\",\n  email: \"amanpreet.3579@gmail.com\",\n  password: 123456,\n}).then((user) => {\n  chai\n    .request(app)\n    .delete(`/api/users/101`)\n    .auth(jsonwebtoken, { type: \"bearer\" })\n    .end((err, res) => {\n      res.should.have.status(404);\n      done();\n    });\n});",
                  "err": {},
                  "uuid": "b20c92c4-3963-46fb-9423-2dadba2fdeb9",
                  "parentUUID": "7d16fce7-ada5-4f2e-a29e-04dcd32ad2f1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cbf393a6-b982-4829-ba25-d70a6f1097a5",
                "1bb917ec-a173-4470-9425-c2f35ccd5639",
                "b20c92c4-3963-46fb-9423-2dadba2fdeb9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 148,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "121cafea-0843-435c-bc02-3593300d19a2",
          "title": "Users",
          "fullFile": "/Users/aman/Desktop/user-management-system/test/users.get.js",
          "file": "/test/users.get.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Users\"",
              "fullTitle": "Users \"before each\" hook in \"Users\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Before each test we clear the database\nUser.destroy({ truncate: true, where: {} }).then(() => {\n  chai\n    .request(app)\n    .post(\"/token\")\n    .end((err, res) => {\n      jsonwebtoken = res.text;\n      done();\n    });\n});",
              "err": {},
              "uuid": "659a2900-b01e-4fa8-ae7c-a22a83e74477",
              "parentUUID": "121cafea-0843-435c-bc02-3593300d19a2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "60dc7cde-1759-4056-8f87-1fe45e4acd53",
              "title": "/GET user(s)",
              "fullFile": "/Users/aman/Desktop/user-management-system/test/users.get.js",
              "file": "/test/users.get.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should return an 403 status without authentication",
                  "fullTitle": "Users /GET user(s) it should return an 403 status without authentication",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(app)\n  .get(\"/api/users\")\n  .end((err, res) => {\n    res.should.have.status(403);\n    done();\n  });",
                  "err": {},
                  "uuid": "98dea653-69c3-4dcb-9636-1bd4c999f190",
                  "parentUUID": "60dc7cde-1759-4056-8f87-1fe45e4acd53",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should return empty list",
                  "fullTitle": "Users /GET user(s) it should return empty list",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(app)\n  .get(\"/api/users\")\n  .auth(jsonwebtoken, { type: \"bearer\" })\n  .end((err, res) => {\n    res.should.have.status(200);\n    res.body.should.be.a(\"array\");\n    res.body.length.should.be.eql(0);\n    done();\n  });",
                  "err": {},
                  "uuid": "6ce0b488-3fd0-444f-bcd8-174c88a86e64",
                  "parentUUID": "60dc7cde-1759-4056-8f87-1fe45e4acd53",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should return array with only single user",
                  "fullTitle": "Users /GET user(s) it should return array with only single user",
                  "timedOut": false,
                  "duration": 70,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "User.create({\n  fullname: \"Amanpreet Singh\",\n  email: \"amanpreet.3579@gmail.com\",\n  password: 123456,\n}).then((user) => {\n  chai\n    .request(app)\n    .get(\"/api/users\")\n    .auth(jsonwebtoken, { type: \"bearer\" })\n    .end((err, res) => {\n      res.should.have.status(200);\n      res.body.should.be.a(\"array\");\n      res.body.length.should.be.eql(1);\n      done();\n    });\n});",
                  "err": {},
                  "uuid": "c043107c-33c8-4a55-9437-85cdf1e20167",
                  "parentUUID": "60dc7cde-1759-4056-8f87-1fe45e4acd53",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should return single user",
                  "fullTitle": "Users /GET user(s) it should return single user",
                  "timedOut": false,
                  "duration": 70,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "User.create({\n  fullname: \"Amanpreet Singh\",\n  email: \"amanpreet.3579@gmail.com\",\n  password: 123456,\n}).then((user) => {\n  chai\n    .request(app)\n    .get(`/api/users/${user.id}`)\n    .auth(jsonwebtoken, { type: \"bearer\" })\n    .end((err, res) => {\n      res.should.have.status(200);\n      res.body.should.be.a(\"object\");\n      res.body.should.have.property(\"fullname\").eql(user.fullname);\n      res.body.should.have.property(\"email\").eql(user.email);\n      done();\n    });\n});",
                  "err": {},
                  "uuid": "5616892f-60c7-4fb9-a1e6-e6a3cb3ef597",
                  "parentUUID": "60dc7cde-1759-4056-8f87-1fe45e4acd53",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should return user not found 404",
                  "fullTitle": "Users /GET user(s) it should return user not found 404",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(app)\n  .get(`/api/users/101`)\n  .auth(jsonwebtoken, { type: \"bearer\" })\n  .end((err, res) => {\n    res.should.have.status(404);\n    done();\n  });",
                  "err": {},
                  "uuid": "6142b7f2-557e-4939-9908-abd31f9945c7",
                  "parentUUID": "60dc7cde-1759-4056-8f87-1fe45e4acd53",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "98dea653-69c3-4dcb-9636-1bd4c999f190",
                "6ce0b488-3fd0-444f-bcd8-174c88a86e64",
                "c043107c-33c8-4a55-9437-85cdf1e20167",
                "5616892f-60c7-4fb9-a1e6-e6a3cb3ef597",
                "6142b7f2-557e-4939-9908-abd31f9945c7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 145,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3bc578bd-cf45-4eb7-90b8-de8453037d08",
          "title": "Users",
          "fullFile": "/Users/aman/Desktop/user-management-system/test/users.post.js",
          "file": "/test/users.post.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Users\"",
              "fullTitle": "Users \"before each\" hook in \"Users\"",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Before each test we clear the database\nUser.destroy({ truncate: true, where: {} }).then(() => {\n  chai\n    .request(app)\n    .post(\"/token\")\n    .end((err, res) => {\n      jsonwebtoken = res.text;\n      done();\n    });\n});",
              "err": {},
              "uuid": "080d4461-4123-4895-a031-8ce94f9bd9f4",
              "parentUUID": "3bc578bd-cf45-4eb7-90b8-de8453037d08",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0894b6ef-a9a8-46e4-a293-e9f73dce8b86",
              "title": "/POST user",
              "fullFile": "/Users/aman/Desktop/user-management-system/test/users.post.js",
              "file": "/test/users.post.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should return an 403 status without authentication",
                  "fullTitle": "Users /POST user it should return an 403 status without authentication",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(app)\n  .post(\"/api/users\")\n  .end((err, res) => {\n    res.should.have.status(403);\n    done();\n  });",
                  "err": {},
                  "uuid": "b45eea27-dfa3-4924-8924-af3d39d318df",
                  "parentUUID": "0894b6ef-a9a8-46e4-a293-e9f73dce8b86",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should add a user",
                  "fullTitle": "Users /POST user it should add a user",
                  "timedOut": false,
                  "duration": 70,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n  fullname: \"Amanpreet Singh\",\n  email: \"amanpreet.3579@gmail.com\",\n  password: 123456,\n};\nchai\n  .request(app)\n  .post(`/api/users`)\n  .auth(jsonwebtoken, { type: \"bearer\" })\n  .send(user)\n  .end((err, res) => {\n    res.should.have.status(200);\n    res.body.should.be.a(\"object\");\n    res.body.should.have.property(\"id\");\n    res.body.should.have.property(\"fullname\").eql(user.fullname);\n    res.body.should.have.property(\"email\").eql(user.email);\n    done();\n  });",
                  "err": {},
                  "uuid": "63ee1409-c7bd-41a7-a4f9-c11f712c8c78",
                  "parentUUID": "0894b6ef-a9a8-46e4-a293-e9f73dce8b86",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[ Case 1 : Invalid Name ] it should not add a user",
                  "fullTitle": "Users /POST user [ Case 1 : Invalid Name ] it should not add a user",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n  fullname: \"\",\n  email: \"amanpreet.3579@gmail.com\",\n  password: 123456,\n};\nchai\n  .request(app)\n  .post(`/api/users`)\n  .auth(jsonwebtoken, { type: \"bearer\" })\n  .send(user)\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "3993e7d9-7779-4bee-969d-c96348052f68",
                  "parentUUID": "0894b6ef-a9a8-46e4-a293-e9f73dce8b86",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[ Case 2 : Invalid Email ] it should not add a user",
                  "fullTitle": "Users /POST user [ Case 2 : Invalid Email ] it should not add a user",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n  fullname: \"Amanpreet Singh\",\n  email: \"abc\",\n  password: 123456,\n};\nchai\n  .request(app)\n  .post(`/api/users`)\n  .auth(jsonwebtoken, { type: \"bearer\" })\n  .send(user)\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "7c995493-71c1-49ff-835c-339d6affff62",
                  "parentUUID": "0894b6ef-a9a8-46e4-a293-e9f73dce8b86",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[ Case 3 : Duplicate Email ] it should not add a user",
                  "fullTitle": "Users /POST user [ Case 3 : Duplicate Email ] it should not add a user",
                  "timedOut": false,
                  "duration": 138,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n  fullname: \"Amanpreet Singh\",\n  email: \"amanpreet.3579@gmail.com\",\n  password: 123456,\n};\nUser.create({\n  fullname: \"Amanpreet Singh\",\n  email: \"amanpreet.3579@gmail.com\",\n  password: 123456,\n}).then(() => {\n  chai\n    .request(app)\n    .post(`/api/users`)\n    .auth(jsonwebtoken, { type: \"bearer\" })\n    .send(user)\n    .end((err, res) => {\n      res.should.have.status(400);\n      done();\n    });\n});",
                  "err": {},
                  "uuid": "2fda51b0-4576-4f08-97e4-3cbef0536551",
                  "parentUUID": "0894b6ef-a9a8-46e4-a293-e9f73dce8b86",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[ Case 4 : Invalid Password ] it should not add a user",
                  "fullTitle": "Users /POST user [ Case 4 : Invalid Password ] it should not add a user",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n  fullname: \"Amanpreet Singh\",\n  email: \"abc\",\n  password: 123,\n};\nchai\n  .request(app)\n  .post(`/api/users`)\n  .auth(jsonwebtoken, { type: \"bearer\" })\n  .send(user)\n  .end((err, res) => {\n    res.should.have.status(400);\n    done();\n  });",
                  "err": {},
                  "uuid": "06e918bc-ea95-49b3-9322-b1d412288445",
                  "parentUUID": "0894b6ef-a9a8-46e4-a293-e9f73dce8b86",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b45eea27-dfa3-4924-8924-af3d39d318df",
                "63ee1409-c7bd-41a7-a4f9-c11f712c8c78",
                "3993e7d9-7779-4bee-969d-c96348052f68",
                "7c995493-71c1-49ff-835c-339d6affff62",
                "2fda51b0-4576-4f08-97e4-3cbef0536551",
                "06e918bc-ea95-49b3-9322-b1d412288445"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 217,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}